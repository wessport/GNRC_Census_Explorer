addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addMarkers(CartoDB.PositronOnlyLabels)
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addMarkers(providers$CartoDB.PositronOnlyLabels)
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'overlayPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'overlayPane')) %>%
addLayersControl(overlayGroups = c("labels","polygons"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
devtools::install_github('rstudio/leaflet')
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
# Formatting census data for end users
library(tidycensus)
library(leaflet)
library(rgdal)
library(magrittr)
library(sf)
library(tigris)
library(tidyverse)
library(lettercase)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("6999d8d1e472e95e754d605f9a5646beec7eede5", install = TRUE)
Sys.getenv("CENSUS_API_KEY")
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(pane = 'markerPane'))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
#options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
remove.packages(leaflet)
remove.packages('leaflet')
devtools::install_github('rstudio/leaflet')
# Formatting census data for end users
library(tidycensus)
library(leaflet)
library(rgdal)
library(magrittr)
library(sf)
library(tigris)
library(tidyverse)
library(lettercase)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("6999d8d1e472e95e754d605f9a5646beec7eede5", install = TRUE)
Sys.getenv("CENSUS_API_KEY")
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE, zIndex = 1)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
options=list(zIndex = 2)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(zIndex = 3, pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
) %>%
addProviderTiles("CartoDB.PositronOnlyLabels", group="labels",
options=providerTileOptions(pane = 'markerPane')) %>%
addLayersControl(overlayGroups = c("polygons", "labels"))
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format)
remove.packages("leaflet")
install.packages("leaflet")
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
# Formatting census data for end users
library(tidycensus)
library(leaflet)
library(rgdal)
library(magrittr)
library(sf)
library(tigris)
library(tidyverse)
library(lettercase)
options(tigris_class = "sf")
options(tigris_use_cache = TRUE)
census_api_key("6999d8d1e472e95e754d605f9a5646beec7eede5", install = TRUE)
Sys.getenv("CENSUS_API_KEY")
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.PositronNoLabels,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(group = "polygons",
fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
.libpaths
.libPaths
leaflet(test) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", ALAND)(ALAND),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE),
#label = labels
label = lapply(c,HTML)
)
# Leaflet works with wide format, expects only 1 variable at a time
leaflet(t) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", B25063_001_estimate)(B25063_001_estimate),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB.Positron,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$CartoDB,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$HERE.normalDayGrey,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$Esri,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$MapBox,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
leaflet(census_format) %>%
addProviderTiles(providers$OpenStreetMap,
options = providerTileOptions(noWrap =TRUE)
) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", map_var)(map_var),
fillOpacity = 0.5,
weight = 2,
stroke = T,
color = "grey",
opacity = 1,
dashArray = "3",
highlight = highlightOptions(color = "white", weight = 3, bringToFront = TRUE)
)
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addProviderTiles(providers$CartoDB.Positron)
